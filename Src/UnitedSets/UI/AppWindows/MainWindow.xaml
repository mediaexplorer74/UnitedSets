<aw:NativeHelperWindow
    x:Class="UnitedSets.UI.AppWindows.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:winUIEx="using:WinUIEx"
    xmlns:tabs="using:UnitedSets.Tabs"
    xmlns:icons="using:Cube.UI.Icons"
    xmlns:module="using:UnitedSets.UI.FlyoutModules"
    xmlns:helpers="using:UnitedSets.Helpers"
    xmlns:us="using:UnitedSets"
    xmlns:aw="using:UnitedSets.UI.AppWindows"
    xmlns:controls="using:UnitedSets.UI.Controls"
    xmlns:guics="using:Get.UI.Controls"
    mc:Ignorable="d">
    <Grid x:Name="swapChainPanel" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Canvas.ZIndex="1">
        <Grid x:Name="RootGrid" Canvas.ZIndex="1">
            <Grid.Resources>
                <Storyboard x:Name="WindowHoveringStoryBoard">
                    <ColorAnimation Storyboard.TargetName="MainBackgroundColor"
                        Storyboard.TargetProperty="Color"
                        Duration="0:0:0.5"
                        From="Transparent"
                        To="{ThemeResource LayerFillColorDefault}">
                    <ColorAnimation.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </ColorAnimation.EasingFunction>
                    </ColorAnimation>
                </Storyboard>
                <Storyboard x:Name="NoWindowHoveringStoryBoard">
                    <ColorAnimation Storyboard.TargetName="MainBackgroundColor"
                        Storyboard.TargetProperty="Color"
                        Duration="0:0:0.5"
                        From="{ThemeResource LayerFillColorDefault}"
                        To="Transparent">
                    <ColorAnimation.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </ColorAnimation.EasingFunction>
                    </ColorAnimation>
                </Storyboard>
                <controls:BackdropedFlyout x:Name="ClosingFlyout" Placement="BottomEdgeAlignedRight" ShouldConstrainToRootBounds="False">
                    <StackPanel Spacing="16">
                        <TextBlock HorizontalAlignment="Center">How would you like to close the app?</TextBlock>
                        <StackPanel Orientation="Horizontal" Spacing="16">
                            <StackPanel.Resources>
                                <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                                    <Style.Setters>
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Style.Setters>
                                </Style>
                            </StackPanel.Resources>
                            <Button HorizontalAlignment="Center" Command="{x:Bind RequestCloseCommand}" CommandParameter="{x:Bind ReleaseWindowCloseMode}" Foreground="{ThemeResource SystemAccentColorLight2}" BorderBrush="{ThemeResource SystemAccentColorLight2}">Release</Button>
                            <Button HorizontalAlignment="Center" Command="{x:Bind RequestCloseCommand}" CommandParameter="{x:Bind SaveCloseWindowCloseMode}">Save and close</Button>
                            <Button HorizontalAlignment="Center" Command="{x:Bind RequestCloseCommand}" CommandParameter="{x:Bind CloseWindowCloseMode}" Foreground="#e96e60" BorderBrush="#e96e60">Close</Button>
                        </StackPanel>
                        <CheckBox Content="Remember my option" HorizontalAlignment="Center"/>
                    </StackPanel>
                </controls:BackdropedFlyout>
            </Grid.Resources>
            <Grid.Background>
                <SolidColorBrush x:Name="MainBackgroundColor" Color="Transparent"/>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Border x:Name="WindowBorderOnTransparent"
                Visibility="Collapsed"
                Grid.RowSpan="50"
                Grid.ColumnSpan="50"
                Canvas.ZIndex="-5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                CornerRadius="15, 5, 15, 5"
                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                BorderThickness="3"
            >
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Color="{ThemeResource SystemListAccentHighColor}" Offset="1"/>
                            <GradientStop Color="{ThemeResource SystemListAccentLowColor}" Offset="0"/>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>
            <Grid x:Name="CustomDragRegion" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.RowSpan="2" Width="10" Height="10" Canvas.ZIndex="90"/>
            <Border x:Name="TabViewBorder" MinHeight="40" PointerMoved="DragRegion_PointerMoved" Background="Transparent">
                <guics:DragRegion x:Name="DragRegion" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <guics:DragRegion.ColumnDefinitions>
                        <ColumnDefinition Width="{x:Bind GridLengthFromPixelInt(AppWindow.TitleBar.LeftInset), Mode=OneTime}"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="32"/>
                        <ColumnDefinition Width="{x:Bind GridLengthFromPixelInt(AppWindow.TitleBar.RightInset), Mode=OneTime}"/>
                    </guics:DragRegion.ColumnDefinitions>
                    <TabView
                        Grid.Column="1"
                        Style="{ThemeResource GlowTabView}"
                        x:Name="TabView"
                        x:FieldModifier="Public"
                        IsAddTabButtonVisible="False"
                        TabItemsSource="{x:Bind us:UnitedSetsApp.Current.Tabs, Mode=OneWay}"
                        SelectedItem="{x:Bind us:UnitedSetsApp.Current.SelectedTab, Mode=TwoWay}"
                        VerticalAlignment="Center"
                        TabDragStarting="TabDragStarting"
                        TabDroppedOutside="TabDroppedOutside"
                        CanDragTabs="True"
                        CanReorderTabs="True"
                        BorderBrush="Transparent"
                        AllowDrop="True"
                        DragOver="OnDragItemOverTabView"
                        Drop="OnDropOverTabView"
                        MinHeight="42"
                        HorizontalAlignment="Left"
                        SelectionChanged="TabSelectionChanged"
                    >
                        <TabView.Resources>
                            <SolidColorBrush x:Key="TabViewBorderBrush" Color="Transparent"/>
                        </TabView.Resources>
                        <TabView.TabItemTemplate>
                            <DataTemplate x:DataType="tabs:TabBase">
                                <TabViewItem
                                    x:Name="TabViewItem"
                                    Margin="2, 0, 2, 2"
                                    Background="{ThemeResource 12Brush}"
                                    Style="{ThemeResource UndockedTabViewItemStyle}"
                                    CloseRequested="{x:Bind TabCloseRequestedEv}"
                                    DoubleTapped="{x:Bind TabDoubleTapped}"
                                    RightTapped="{x:Bind TabRightTapped}"
                                    Tag="{x:Bind}"
                                    PointerPressed="{x:Bind TabClickEv}"
                                    AllowDrop="True"
                                    DragOver="OnDragOverTabViewItem"
                                    guics:DragRegion.Clickable="True"
                                >
                                    <!--<VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="FlashingStates">
                                            <VisualState x:Name="Flashing">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{x:Bind IsFlashing}"/>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Target="TabViewItem.Background" Value="Red" />
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Regular">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{x:Bind helpers:XAMLFuncs.Not(IsFlashing)}"/>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Target="TabViewItem.Background" Value="{ThemeResource 12Brush}" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>-->
                                    <TabViewItem.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="{x:Bind Icon, Mode=OneWay}" MaxWidth="16"/>
                                            <TextBlock Margin="7, 0, 5, 0" Text="{x:Bind Title, Mode=OneWay}" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" MaxWidth="190"/>
                                        </StackPanel>
                                    </TabViewItem.Header>
                                </TabViewItem>
                            </DataTemplate>
                        </TabView.TabItemTemplate>
                        <TabView.TabStripHeader>
                            <Button x:Name="Ele" VerticalAlignment="Center" Style="{ThemeResource ToolbarButton}" Padding="5" Margin="5,0,0,0" Width="32" Height="32">
                                <icons:FluentIconElement Symbol="Navigation20" Margin="-2,-6,0,0" Foreground="{ThemeResource TextFillColorPrimaryBrush}"/>
                                <Button.Flyout>
                                    <controls:BackdropedFlyout ShouldConstrainToRootBounds="False">
                                        <module:MainWindowMenuFlyoutModule MainWindow="{x:Bind}"/>
                                    </controls:BackdropedFlyout>
                                </Button.Flyout>
                            </Button>
                        </TabView.TabStripHeader>
                        <TabView.TabStripFooter>
                            <SplitButton HorizontalAlignment="Left" Click="OnAddTabButtonClick" Canvas.ZIndex="8" Padding="5" Height="30" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="0,0,20,0"
                                    guics:DragRegion.Clickable="True">
                                <icons:FluentSymbolIcon Symbol="Add20" Margin="-2,-2,0,0"/>
                                <SplitButton.Flyout>
                                    <MenuFlyout ShouldConstrainToRootBounds="False" Placement="BottomEdgeAlignedRight">
                                        <MenuFlyoutItem Click="OnAddTabButtonClick">Add Window</MenuFlyoutItem>
                                        <MenuFlyoutItem Command="{x:Bind AddSplitableTabCommand}">Add Splitable Tab</MenuFlyoutItem>
                                    </MenuFlyout>
                                </SplitButton.Flyout>
                            </SplitButton>
                        </TabView.TabStripFooter>
                    </TabView>
                </guics:DragRegion>
            </Border>
            <Border Grid.Row="1" x:Name="MainAreaBorder">
                <controls:TabVisualizer
                    Tab="{x:Bind us:UnitedSetsApp.Current.SelectedTab, Mode=OneWay}"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                />
            </Border>
            <controls:HomeBackground x:Name="UnitedSetsHomeBackground"/>
        </Grid>
    </Grid>
</aw:NativeHelperWindow>
